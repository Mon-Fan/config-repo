
spring.datasource.master.url: jdbc:mysql://192.168.2.2:3306/rplatform?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.master.username: root
spring.datasource.master.password: eson
spring.datasource.master.driver-class-name: com.mysql.jdbc.Driver
spring.datasource.master.platform: mysql
spring.datasource.master.type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
#初始化大小，最小，最大
spring.datasource.master.initialSize: 1
spring.datasource.master.minIdle: 3
spring.datasource.master.maxActive: 20
#配置获取连接等待超时的时间
spring.datasource.master.maxWait: 60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.master.timeBetweenEvictionRunsMillis: 60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.master.minEvictableIdleTimeMillis: 30000
spring.datasource.master.validationQuery: select 'x'
spring.datasource.master.testWhileIdle: true
spring.datasource.master.testOnBorrow: false
spring.datasource.master.testOnReturn: false
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.master.poolPreparedStatements: true
spring.datasource.master.maxPoolPreparedStatementPerConnectionSize: 20
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.master.filters: stat,wall,slf4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.master.connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
#spring.datasource.master.useGlobalDataSourceStat: true
      
 
spring.datasource.slave.url: jdbc:mysql://192.168.2.2:3306/rplatform?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.slave.username: root
spring.datasource.slave.password: eson
spring.datasource.slave.driver-class-name: com.mysql.jdbc.Driver
spring.datasource.slave.platform: mysql
spring.datasource.slave.type: com.alibaba.druid.pool.DruidDataSource
#下面为连接池的补充设置，应用到上面所有数据源中
#初始化大小，最小，最大
spring.datasource.slave.initialSize: 1
spring.datasource.slave.minIdle: 3
spring.datasource.slave.maxActive: 20
#配置获取连接等待超时的时间
spring.datasource.slave.maxWait: 60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.slave.timeBetweenEvictionRunsMillis: 60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.slave.minEvictableIdleTimeMillis: 30000
spring.datasource.slave.validationQuery: select 'x'
spring.datasource.slave.testWhileIdle: true
spring.datasource.slave.testOnBorrow: false
spring.datasource.slave.testOnReturn: false
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.slave.poolPreparedStatements: true
spring.datasource.slave.maxPoolPreparedStatementPerConnectionSize: 20
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.slave.filters: stat,wall,slf4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.slave.connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
#spring.datasource.slave.useGlobalDataSourceStat: true

  #jpa配置

spring.jpa.database: mysql
spring.jpa.database-platform: org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto: update
#redis配置

#Redis服务器地址
spring.redis.host: 127.0.0.1 
#Redis数据库索引（默认为0）
spring.redis.database: 0 
#Redis服务器连接端口
spring.redis.port: 6379 
#连接超时时间（毫秒）
spring.redis.timeout: 1000
#Redis服务器连接密码（默认为空）
spring.redis.password:  

#连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active: 8
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait: -1
#连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle: 8
#连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle: 0
